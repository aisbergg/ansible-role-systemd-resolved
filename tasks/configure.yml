---
- name: gather package facts
  ansible.builtin.package_facts:
    manager: auto
  when: ansible_facts.packages is not defined

- name: configure systemd-resolved
  ansible.builtin.template:
    src: resolved.conf.j2
    dest: /etc/systemd/resolved.conf
    owner: root
    group: root
    mode: 0644
  vars:
    config: "{{ __systemd_resolved_config_defaults | combine(systemd_resolved_config) }}"
  notify: reload systemd-resolved

- when: systemd_resolved_service_enabled or
        systemd_resolved_service_state != 'stopped'
  block:
    - name: enable systemd-resolved plugin in NetworkManager
      ansible.builtin.copy:
        dest: /etc/NetworkManager/conf.d/dns.conf
        content: |
          [main]
          dns=systemd-resolved
        owner: root
        group: root
        mode: 0644
      notify: restart networkmanager
      when:
        - "'NetworkManager.service' in ansible_facts.services"
        - "ansible_facts.services['NetworkManager.service'].state == 'running'"

    - name: link /etc/resolv.conf to stub
      ansible.builtin.file:
        src: /run/systemd/resolve/stub-resolv.conf
        dest: /etc/resolv.conf
        state: link
        force: true

    - name: enable nss-resolve module to resolve names via systemd-resolved
      ansible.builtin.lineinfile:
        path: /etc/nsswitch.conf
        regexp: '^(hosts:\s*)'
        line: '\1files resolve [!UNAVAIL=return] dns'
        backrefs: true

- name: flush notified handlers
  ansible.builtin.meta: flush_handlers
